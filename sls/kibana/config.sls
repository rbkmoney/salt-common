#!pyobjects
# -*- mode: python -*-
from salt.utils import dictupdate
import yaml

fqdn = grains('fqdn')
fqdn_ipv6 = grains('fqdn_ipv6')
conf_path = '/etc/kibana/'

File.directory(conf_path, create=True, mode=755, user='root', group='root')

tls = pillar('kibana:tls', {})

# defaults
config = {
  'server': {
    'port': 5601,
    'host': '::1',
    'basePath': '',
  },
  'elasticsearch': {
    'hosts': [
      ('https://' if tls else 'http://') + fqdn + ":9200"],
    'preserveHost': True,
  },
  'kibana': {
    'index': ".kibana",
  },
  'logging': {
    'dest': '/var/log/kibana/kibana.json',
    'json': True, 'verbose': False
  },
}

out = 'elasticsearch'
if out in tls.keys():
  out_ssl = {
    'alwaysPresentCertificate': False,
    'verificationMode': 'certificate',
  }
  config[out]['ssl'] = out_ssl
  for pemtype in ('cert', 'key', 'ca'):
    contents = tls[out].get(pemtype, tls.get(pemtype, ''))
    path = conf_path + out + '-' + pemtype + '.pem'
    if contents:
      if pemtype == 'cert': out_ssl['certificate'] = path
      if pemtype == 'key': out_ssl['key'] = path
      if pemtype == 'ca': out_ssl['certificateAuthorities'] = [path]
    File.managed(
      path, mode=600, user='root', group='root',
      contents=contents, require=[File(conf_path)])

dictupdate.update(config, pillar('kibana:config', {}))

File.managed(
  conf_path + 'kibana.yml',
  mode=640, user='root', group='root',
  contents="# This file is generated by Salt\n" + yaml.dump(config),
  require=[File(conf_path)])
